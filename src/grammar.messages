modDef: KEY_DATA LOWER_IDENT SYM_COLON SYM_UNDERSCORE
##
## Ends in an error in state: 75.
##
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON . tm KEY_WHERE list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON . tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE KEY_QUOTIENT SYM_UNDERSCORE
##
## Ends in an error in state: 86.
##
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT . list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE KEY_QUOTIENT UPPER_IDENT SYM_COLON LOWER_IDENT SYM_SEMI KEY_QUOTIENT
##
## Ends in an error in state: 87.
##
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry) . SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 82, spurious reduction of production list(quotIndEntry) ->
## In state 83, spurious reduction of production list(quotIndEntry) -> quotIndEntry list(quotIndEntry)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE SYM_UNDERSCORE
##
## Ends in an error in state: 77.
##
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE . list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE . list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE UPPER_IDENT SYM_COLON LOWER_IDENT SYM_SEMI SYM_UNDERSCORE
##
## Ends in an error in state: 82.
##
## list(quotIndEntry) -> quotIndEntry . list(quotIndEntry) [ SYM_SEMI KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## quotIndEntry
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE UPPER_IDENT SYM_COLON SYM_UNDERSCORE
##
## Ends in an error in state: 79.
##
## quotIndEntry -> UPPER_IDENT SYM_COLON . tm SYM_SEMI [ UPPER_IDENT SYM_SEMI KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## UPPER_IDENT SYM_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE UPPER_IDENT SYM_COLON UPPER_IDENT SYM_RPAR
##
## Ends in an error in state: 80.
##
## quotIndEntry -> UPPER_IDENT SYM_COLON tm . SYM_SEMI [ UPPER_IDENT SYM_SEMI KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## UPPER_IDENT SYM_COLON tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT KEY_WHERE UPPER_IDENT UPPER_IDENT
##
## Ends in an error in state: 78.
##
## quotIndEntry -> UPPER_IDENT . SYM_COLON tm SYM_SEMI [ UPPER_IDENT SYM_SEMI KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## UPPER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_COLON UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 76.
##
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm . KEY_WHERE list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
## quotInd -> KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm . KEY_WHERE list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA LOWER_IDENT list(quotIndArgument) SYM_COLON tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_LPAR LOWER_IDENT SYM_COLON LOWER_IDENT SYM_RPAR UPPER_IDENT
##
## Ends in an error in state: 72.
##
## list(quotIndArgument) -> quotIndArgument . list(quotIndArgument) [ SYM_COLON ]
##
## The known suffix of the stack is as follows:
## quotIndArgument
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_LPAR LOWER_IDENT SYM_COLON SYM_UNDERSCORE
##
## Ends in an error in state: 69.
##
## quotIndArgument -> SYM_LPAR LOWER_IDENT SYM_COLON . tm SYM_RPAR [ SYM_LPAR SYM_COLON ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR LOWER_IDENT SYM_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_LPAR LOWER_IDENT SYM_COLON UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 70.
##
## quotIndArgument -> SYM_LPAR LOWER_IDENT SYM_COLON tm . SYM_RPAR [ SYM_LPAR SYM_COLON ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR LOWER_IDENT SYM_COLON tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_LPAR LOWER_IDENT UPPER_IDENT
##
## Ends in an error in state: 68.
##
## quotIndArgument -> SYM_LPAR LOWER_IDENT . SYM_COLON tm SYM_RPAR [ SYM_LPAR SYM_COLON ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR LOWER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT SYM_LPAR UPPER_IDENT
##
## Ends in an error in state: 67.
##
## quotIndArgument -> SYM_LPAR . LOWER_IDENT SYM_COLON tm SYM_RPAR [ SYM_LPAR SYM_COLON ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA LOWER_IDENT UPPER_IDENT
##
## Ends in an error in state: 66.
##
## quotInd -> KEY_DATA LOWER_IDENT . list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
## quotInd -> KEY_DATA LOWER_IDENT . list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA LOWER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: KEY_DATA UPPER_IDENT
##
## Ends in an error in state: 65.
##
## quotInd -> KEY_DATA . LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
## quotInd -> KEY_DATA . LOWER_IDENT list(quotIndArgument) SYM_COLON tm KEY_WHERE list(quotIndEntry) KEY_QUOTIENT list(quotIndEntry) SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## KEY_DATA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_LAM LOWER_IDENT SYM_COLON SYM_UNDERSCORE
##
## Ends in an error in state: 18.
##
## tm0 -> KEY_LAM LOWER_IDENT SYM_COLON . tm0 SYM_COMMA tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_LAM LOWER_IDENT SYM_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_LAM LOWER_IDENT SYM_COLON UPPER_IDENT SYM_COMMA SYM_UNDERSCORE
##
## Ends in an error in state: 28.
##
## tm0 -> KEY_LAM LOWER_IDENT SYM_COLON tm0 SYM_COMMA . tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_LAM LOWER_IDENT SYM_COLON tm0 SYM_COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_LAM LOWER_IDENT SYM_COLON UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 27.
##
## tm0 -> KEY_LAM LOWER_IDENT SYM_COLON tm0 . SYM_COMMA tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_LAM LOWER_IDENT SYM_COLON tm0
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_LAM LOWER_IDENT UPPER_IDENT
##
## Ends in an error in state: 17.
##
## tm0 -> KEY_LAM LOWER_IDENT . SYM_COLON tm0 SYM_COMMA tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_LAM LOWER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_LAM UPPER_IDENT
##
## Ends in an error in state: 16.
##
## tm0 -> KEY_LAM . LOWER_IDENT SYM_COLON tm0 SYM_COMMA tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH SYM_UNDERSCORE
##
## Ends in an error in state: 15.
##
## tm0 -> KEY_MATCH . tm0 KEY_WITH branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
## tm0 -> KEY_MATCH . tm0 KEY_WITH branches KEY_QUOTIENT branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_MATCH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH KEY_QUOTIENT SYM_EQ
##
## Ends in an error in state: 51.
##
## tm0 -> KEY_MATCH tm0 KEY_WITH branches KEY_QUOTIENT . branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_MATCH tm0 KEY_WITH branches KEY_QUOTIENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH KEY_REFL UPPER_IDENT
##
## Ends in an error in state: 36.
##
## pattern -> KEY_REFL . atomicPattern [ SYM_RPAR SYM_ARROW ]
##
## The known suffix of the stack is as follows:
## KEY_REFL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH SYM_EQ
##
## Ends in an error in state: 31.
##
## tm0 -> KEY_MATCH tm0 KEY_WITH . branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
## tm0 -> KEY_MATCH tm0 KEY_WITH . branches KEY_QUOTIENT branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_MATCH tm0 KEY_WITH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH SYM_LPAR SYM_SEMI
##
## Ends in an error in state: 34.
##
## atomicPattern -> SYM_LPAR . pattern SYM_RPAR [ SYM_UNDERSCORE SYM_RPAR SYM_LPAR SYM_ARROW LOWER_IDENT ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH SYM_LPAR UPPER_IDENT SYM_ARROW
##
## Ends in an error in state: 38.
##
## atomicPattern -> SYM_LPAR pattern . SYM_RPAR [ SYM_UNDERSCORE SYM_RPAR SYM_LPAR SYM_ARROW LOWER_IDENT ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR pattern
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production list(atomicPattern) ->
## In state 41, spurious reduction of production pattern -> UPPER_IDENT list(atomicPattern)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH UPPER_IDENT SYM_ARROW LOWER_IDENT SYM_SEMI SYM_EQ
##
## Ends in an error in state: 53.
##
## list(branch) -> branch . list(branch) [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## branch
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH UPPER_IDENT SYM_ARROW SYM_UNDERSCORE
##
## Ends in an error in state: 45.
##
## branch -> pattern SYM_ARROW . tm SYM_SEMI [ UPPER_IDENT SYM_UNDERSCORE SYM_SEMI SYM_RPAR SYM_LPAR SYM_DEFEQ SYM_COMMA LOWER_IDENT KEY_WITH KEY_WHERE KEY_REFL KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## pattern SYM_ARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH UPPER_IDENT SYM_ARROW UPPER_IDENT SYM_RPAR
##
## Ends in an error in state: 47.
##
## branch -> pattern SYM_ARROW tm . SYM_SEMI [ UPPER_IDENT SYM_UNDERSCORE SYM_SEMI SYM_RPAR SYM_LPAR SYM_DEFEQ SYM_COMMA LOWER_IDENT KEY_WITH KEY_WHERE KEY_REFL KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## pattern SYM_ARROW tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH UPPER_IDENT SYM_RPAR
##
## Ends in an error in state: 44.
##
## branch -> pattern . SYM_ARROW tm SYM_SEMI [ UPPER_IDENT SYM_UNDERSCORE SYM_SEMI SYM_RPAR SYM_LPAR SYM_DEFEQ SYM_COMMA LOWER_IDENT KEY_WITH KEY_WHERE KEY_REFL KEY_QUOTIENT ]
##
## The known suffix of the stack is as follows:
## pattern
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production list(atomicPattern) ->
## In state 41, spurious reduction of production pattern -> UPPER_IDENT list(atomicPattern)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH UPPER_IDENT SYM_UNDERSCORE UPPER_IDENT
##
## Ends in an error in state: 42.
##
## list(atomicPattern) -> atomicPattern . list(atomicPattern) [ SYM_RPAR SYM_ARROW ]
##
## The known suffix of the stack is as follows:
## atomicPattern
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT KEY_WITH UPPER_IDENT UPPER_IDENT
##
## Ends in an error in state: 32.
##
## pattern -> UPPER_IDENT . list(atomicPattern) [ SYM_RPAR SYM_ARROW ]
##
## The known suffix of the stack is as follows:
## UPPER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_MATCH UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 30.
##
## tm0 -> KEY_MATCH tm0 . KEY_WITH branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
## tm0 -> KEY_MATCH tm0 . KEY_WITH branches KEY_QUOTIENT branches [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_MATCH tm0
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON SYM_UNDERSCORE
##
## Ends in an error in state: 14.
##
## tm0 -> KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON . tm0 SYM_RPAR SYM_ARROW tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON UPPER_IDENT SYM_RPAR SYM_ARROW SYM_UNDERSCORE
##
## Ends in an error in state: 57.
##
## tm0 -> KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON tm0 SYM_RPAR SYM_ARROW . tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON tm0 SYM_RPAR SYM_ARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON UPPER_IDENT SYM_RPAR UPPER_IDENT
##
## Ends in an error in state: 56.
##
## tm0 -> KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON tm0 SYM_RPAR . SYM_ARROW tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON tm0 SYM_RPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 55.
##
## tm0 -> KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON tm0 . SYM_RPAR SYM_ARROW tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI SYM_LPAR LOWER_IDENT SYM_COLON tm0
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI SYM_LPAR LOWER_IDENT UPPER_IDENT
##
## Ends in an error in state: 13.
##
## tm0 -> KEY_PI SYM_LPAR LOWER_IDENT . SYM_COLON tm0 SYM_RPAR SYM_ARROW tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI SYM_LPAR LOWER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI SYM_LPAR UPPER_IDENT
##
## Ends in an error in state: 12.
##
## tm0 -> KEY_PI SYM_LPAR . LOWER_IDENT SYM_COLON tm0 SYM_RPAR SYM_ARROW tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI SYM_LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_PI UPPER_IDENT
##
## Ends in an error in state: 11.
##
## tm0 -> KEY_PI . SYM_LPAR LOWER_IDENT SYM_COLON tm0 SYM_RPAR SYM_ARROW tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_PI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_REFL SYM_UNDERSCORE
##
## Ends in an error in state: 8.
##
## tm2 -> KEY_REFL . tm3 [ UPPER_IDENT SYM_SEMI SYM_RPAR SYM_LPAR SYM_EQ SYM_DEFEQ SYM_COMMA SYM_ARROW LOWER_IDENT KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_REFL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON KEY_UNIV UPPER_IDENT
##
## Ends in an error in state: 6.
##
## tm2 -> KEY_UNIV . INTEGER [ UPPER_IDENT SYM_SEMI SYM_RPAR SYM_LPAR SYM_EQ SYM_DEFEQ SYM_COMMA SYM_ARROW LOWER_IDENT KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## KEY_UNIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON LOWER_IDENT SYM_DEFEQ LOWER_IDENT SYM_SEMI UPPER_IDENT
##
## Ends in an error in state: 89.
##
## list(topStmt) -> topStmt . list(topStmt) [ EOF ]
##
## The known suffix of the stack is as follows:
## topStmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON SYM_LPAR SYM_UNDERSCORE
##
## Ends in an error in state: 4.
##
## tm4 -> SYM_LPAR . tm SYM_RPAR [ UPPER_IDENT SYM_SEMI SYM_RPAR SYM_LPAR SYM_EQ SYM_DEFEQ SYM_COMMA SYM_ARROW LOWER_IDENT KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON SYM_LPAR UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 59.
##
## tm4 -> SYM_LPAR tm . SYM_RPAR [ UPPER_IDENT SYM_SEMI SYM_RPAR SYM_LPAR SYM_EQ SYM_DEFEQ SYM_COMMA SYM_ARROW LOWER_IDENT KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## SYM_LPAR tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON SYM_UNDERSCORE
##
## Ends in an error in state: 2.
##
## funDef -> LOWER_IDENT SYM_COLON . tm SYM_DEFEQ tm SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## LOWER_IDENT SYM_COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_ARROW SYM_UNDERSCORE
##
## Ends in an error in state: 25.
##
## tm0 -> tm1 SYM_ARROW . tm0 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## tm1 SYM_ARROW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_DEFEQ SYM_UNDERSCORE
##
## Ends in an error in state: 62.
##
## funDef -> LOWER_IDENT SYM_COLON tm SYM_DEFEQ . tm SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## LOWER_IDENT SYM_COLON tm SYM_DEFEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_DEFEQ UPPER_IDENT SYM_RPAR
##
## Ends in an error in state: 63.
##
## funDef -> LOWER_IDENT SYM_COLON tm SYM_DEFEQ tm . SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## LOWER_IDENT SYM_COLON tm SYM_DEFEQ tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_EQ SYM_UNDERSCORE
##
## Ends in an error in state: 21.
##
## tm1 -> tm2 SYM_EQ . tm2 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA SYM_ARROW KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## tm2 SYM_EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_EQ UPPER_IDENT SYM_UNDERSCORE
##
## Ends in an error in state: 22.
##
## tm1 -> tm2 SYM_EQ tm2 . [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA SYM_ARROW KEY_WITH KEY_WHERE ]
## tm2 -> tm2 . tm3 [ UPPER_IDENT SYM_SEMI SYM_RPAR SYM_LPAR SYM_DEFEQ SYM_COMMA SYM_ARROW LOWER_IDENT KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## tm2 SYM_EQ tm2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_SEMI
##
## Ends in an error in state: 61.
##
## funDef -> LOWER_IDENT SYM_COLON tm . SYM_DEFEQ tm SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## LOWER_IDENT SYM_COLON tm
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 20, spurious reduction of production tm1 -> tm2
## In state 24, spurious reduction of production tm0 -> tm1
## In state 46, spurious reduction of production tm -> tm0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT SYM_COLON UPPER_IDENT SYM_UNDERSCORE
##
## Ends in an error in state: 20.
##
## tm1 -> tm2 . SYM_EQ tm2 [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA SYM_ARROW KEY_WITH KEY_WHERE ]
## tm1 -> tm2 . [ SYM_SEMI SYM_RPAR SYM_DEFEQ SYM_COMMA SYM_ARROW KEY_WITH KEY_WHERE ]
## tm2 -> tm2 . tm3 [ UPPER_IDENT SYM_SEMI SYM_RPAR SYM_LPAR SYM_EQ SYM_DEFEQ SYM_COMMA SYM_ARROW LOWER_IDENT KEY_WITH KEY_WHERE ]
##
## The known suffix of the stack is as follows:
## tm2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: LOWER_IDENT UPPER_IDENT
##
## Ends in an error in state: 1.
##
## funDef -> LOWER_IDENT . SYM_COLON tm SYM_DEFEQ tm SYM_SEMI [ LOWER_IDENT KEY_DATA EOF ]
##
## The known suffix of the stack is as follows:
## LOWER_IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

modDef: UPPER_IDENT
##
## Ends in an error in state: 0.
##
## modDef' -> . modDef [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

